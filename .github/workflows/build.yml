name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check_format:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Check format
        run: cargo fmt -- --check

  build_workspace:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
          - os: ubuntu-24.04-arm
            rust-target: aarch64-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    - uses: actions/setup-python@v4
      if: matrix.os == 'ubuntu-24.04-arm'
      with:
        python-version: '3.12'
    - name: Install rust toolchain (ARM)
      if: matrix.os == 'ubuntu-24.04-arm'
      run: |
        rustup toolchain install stable-aarch64-unknown-linux-gnu
        rustup default stable-aarch64-unknown-linux-gnu
        rustup target add ${{ matrix.rust-target }}
    - name: Check
      run: cargo check --verbose
    - name: Check with examples
      run: cargo check --examples --verbose
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Build (release)
      run: cargo build --release --verbose

  build_lib_all_features:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
          - os: ubuntu-24.04-arm
            rust-target: aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v4
        if: matrix.os == 'ubuntu-24.04-arm'
        with:
          python-version: '3.12'
      - name: Install rust toolchain (ARM)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          rustup toolchain install stable-aarch64-unknown-linux-gnu
          rustup default stable-aarch64-unknown-linux-gnu
          rustup target add ${{ matrix.rust-target }}
      - name: Build
        run: |
          cargo build --manifest-path="splashsurf_lib/Cargo.toml" --all-features --verbose
      - name: Run tests
        run: |
          cargo test --manifest-path="splashsurf_lib/Cargo.toml" --all-features --verbose
      - name: Run tests release mode
        run: |
          cargo test --manifest-path="splashsurf_lib/Cargo.toml" --release --all-features --verbose

  build_lib_no_default_features:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
          - os: ubuntu-24.04-arm
            rust-target: aarch64-unknown-linux-gnu
    
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/setup-python@v4
        if: matrix.os == 'ubuntu-24.04-arm'
        with:
          python-version: '3.12'
      - name: Install rust toolchain (ARM)
        if: matrix.os == 'ubuntu-24.04-arm'
        run: |
          rustup toolchain install stable-aarch64-unknown-linux-gnu
          rustup default stable-aarch64-unknown-linux-gnu
          rustup target add ${{ matrix.rust-target }}
      - name: Build
        run: |
          cargo build --manifest-path="splashsurf_lib/Cargo.toml" --no-default-features --verbose
      - name: Run tests
        run: |
          cargo test --manifest-path="splashsurf_lib/Cargo.toml" --no-default-features --verbose
